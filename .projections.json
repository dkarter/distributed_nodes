{
  "web/models": { "type": "model" },
  "web/models/*.ex": {
    "type": "model",
    "alternate":"test/models/{}_test.exs",
    "template":[
      "defmodule {project|camelcase|capitalize|basename}.{camelcase|capitalize|dot} do",
      "  use {project|camelcase|capitalize|basename}.Web, :model",
      "",
      "end"
    ]
  },

  "test/models": { "type": "tmodel" },
  "test/models/*_test.exs": {
    "type": "tmodel",
    "alternate":"web/models/{}.ex",
    "template":[
      "defmodule {project|camelcase|capitalize|basename}.{camelcase|capitalize|dot}Test do",
      "  use {project|camelcase|capitalize|basename}.ModelCase#, async: true",
      "",
      "end"
    ]
  },

  "test/features/*.exs": {
    "type": "feature"
  },

  "web/controllers": { "type": "controller" },
  "web/controllers/*_controller.ex": {
    "type": "controller",
    "alternate": "test/controllers/{}_controller_test.exs",
    "template":[
      "defmodule {project|camelcase|capitalize|basename}.{camelcase|capitalize|dot}Controller do",
      "  use {project|camelcase|capitalize|basename}.Web, :controller" ,
      "",
      "end"
    ]
  },

  "test/controllers": { "type": "tcontroller" },
  "test/controllers/*_controller_test.exs": {
    "type": "tcontroller",
    "alternate": "web/controllers/{}_controller.ex",
    "template":[
      "defmodule {project|camelcase|capitalize|basename}.{camelcase|capitalize|dot}ControllerTest do",
      "  use {project|camelcase|capitalize|basename}.ConnCase#, async: true",
      "",
      "end"
    ]
  },

  "web/views": { "type": "view" },
  "web/views/*_view.ex": {
    "type": "view",
    "alternate": "test/views/{}_view_test.exs",
    "template":[
      "defmodule {project|camelcase|capitalize|basename}.{camelcase|capitalize|dot}View do",
      "  use {project|camelcase|capitalize|basename}.Web, :view" ,
      "",
      "end"
    ]
  },

  "test/views": { "type": "tview" },
  "test/views/*_view_test.exs": {
    "type": "tview",
    "alternate": "web/views/{}_view.ex",
    "template":[
      "defmodule {project|camelcase|capitalize|basename}.{camelcase|capitalize|dot}ViewTest do",
      "  use {project|camelcase|capitalize|basename}.ConnCase#, async: true",
      "",
      "end"
    ]
  },

  "web/channels/*_channel.ex": {
    "type": "channel",
    "template":[
      "defmodule {project|camelcase|capitalize|basename}.{camelcase|capitalize|dot}Channel do",
      "  use Phoenix.Channel",
      "",
      "end"
    ]
  },

  "web/static/css/*.sass": { "type": "stylesheet" },
  "web/static/css/*.scss": { "type": "stylesheet" },

  "web/templates/*.html.eex": {
    "type": "template"
  },

  "lib": { "type": "lib" },
  "lib/*.ex": {
    "type": "lib",
    "alternate": "test/lib/{}_test.exs",
    "template":[
      "defmodule {camelcase|capitalize|dot} do",
      "",
      "end"
    ]
  },

  "test/lib/*.exs": {
    "alternate": "lib/{}.ex",
    "template":[
      "defmodule {camelcase|capitalize|dot} do",
      "  use ExUnit.Case",
      "",
      "end"
    ]
  },

  "test": { "type":"test" },
  "test/*_test.exs": {
    "type": "test",
    "alternate": "{}.ex",
    "template":[
      "defmodule {camelcase|capitalize|dot}Test do",
      "  use ExUnit.Case#, async: true",
      "",
      "end"
    ]
  },

  "test/test_helper.exs": {
    "type":"helper"
  },

  "test/support": {
    "type":"support"
  },

  "test/support/*.ex": {
    "type":"support",
    "template":[
      "defmodule {project|camelcase|capitalize|basename}.{camelcase|capitalize|dot} do",
      "",
      "  use ExUnit.CaseTemplate",
      "",
      "  using do",
      "    quote do",
      "",
      "    end",
      "  end",
      "",
      "  setup tags do",
      "",
      "    :ok",
      "  end",
      "",
      "end"
    ]
  },

  "config/config.exs": { "type": "config" },
  "config/*.exs": {
    "type": "config",
    "template":[
      "use Mix.Config"
    ]
  },

  "config/*.secret.exs": {
    "type": "secret",
    "template":[
      "use Mix.Config",
      "",
      "import_config \"{}.secret.exs\""
    ]
  },

  "mix.exs": { "type": "x" },
  "web/router.ex": { "type": "router" },
  "web/web.ex": { "type": "web" },
  "test/fixtures": { "type":"fixture" },
  "test/fixtures/*": { "type":"fixture" },
  "priv/repo/migrations/*.exs": { "type": "migration" },
  "priv/repo/seeds.exs": { "type": "seeds" },

  "*.exs": { "console": "iex -S mix" },
  "*.ex": { "console": "iex -S mix" }
}
